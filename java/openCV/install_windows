качаем отсюда для винды https://opencv.org/releases/
там в \opencv\opencv\build\java dll и jar в файл проекта. и

package com.company;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;

import org.opencv.highgui.HighGui;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;

public class Main {
    public static void main(String[] args) {
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

        String file = "facedetection_input.jpg";
        Mat src = Imgcodecs.imread(file);

        String xmlFile = "lbpcascade_frontalface.xml";
        CascadeClassifier classifier = new CascadeClassifier(xmlFile);

        MatOfRect faceDetections = new MatOfRect();

        Mat gray = new Mat(src.rows(), src.cols(), src.type());
        Imgproc.cvtColor(src, gray, Imgproc.COLOR_RGB2GRAY);
        HighGui.imshow("gray", gray);
        HighGui.waitKey();

        classifier.detectMultiScale(gray, faceDetections);
        System.out.println(String.format("Detected %s faces",
                faceDetections.toArray().length));

        for (Rect rect : faceDetections.toArray()) {
            Imgproc.rectangle(
                    src,
                    new Point(rect.x, rect.y),
                    new Point(rect.x + rect.width, rect.y + rect.height),
                    new Scalar(0, 0, 255), 3
            );
        }
        Imgcodecs.imwrite("facedetect_output1.jpg", src);
        HighGui.imshow("Gray Scale Image", src);
        HighGui.waitKey();

        System.out.println("Image Processed");
    }
}
