public class Main {
    public static void main(String[] args) {
        Burger burger = Burger.Builder.create()
                .withCheese(true)
                .withSize(345)
                .addName("name1")
                .addNames(List.of("name2", "name3"))
                .build();  
        Burger.Builder builder = burger.getBuilder();
    }
}

@Data
class Burger {
    private int size;
    private boolean cheese = false;
    private List<String> nameList = new ArrayList<>();
    @Setter(value = AccessLevel.PRIVATE)
    private Burger.Builder builder = new Builder();

    static class Builder {
        private int size;
        private boolean cheese = false;
        private List<String> nameList = new ArrayList<>();

        public static Builder create() {
            return new Builder();
        }

        public Burger build() {
            Burger burger = new Burger();
            burger.size = size;
            burger.cheese = cheese;
            burger.nameList = nameList;
            burger.builder = this;
            return burger;
        }

        public Builder withSize(int size) {
            this.size = size;
            return this;
        }

        public Builder withCheese(boolean isCheese) {
            this.cheese = isCheese;
            return this;
        }

        public Builder addName(String name) {
            nameList.add(name);
            return this;
        }

        public Builder addNames(Collection<String> names) {
            nameList.addAll(names);
            return this;
        }
    }
}

-----------------------------------version 2-----------------------------------
public class Main {
    public static void main(String[] args) {
        Burger burger = BurgerBuilder.create()
                .withCheese(true)
                .withSize(45)
                .build();
        System.out.println();
    }
}

class Burger {
    public int size;
    public boolean cheese = false;
}

class BurgerBuilder {
    private int size;
    private boolean cheese = false;

    public static BurgerBuilder create() {
        return new BurgerBuilder();
    }

    public Burger build() {
        Burger burger = new Burger();
        burger.cheese = cheese;
        burger.size = size;
        return burger;
    }

    public BurgerBuilder withSize(int size) {
        this.size = size;
        return this;
    }

    public BurgerBuilder withCheese(boolean isCheese) {
        this.cheese = isCheese;
        return this;
    }
}
