use LinkedList::Nil;
use crate::LinkedList::Cons;

fn main() {
    let mut list = LinkedList::new();
    list = list.add(345).add(5);
    list = list.add(1);
    println!("{:#?}", list.len());
    println!("{:#?}", list.stringify());
}

enum LinkedList {
    Cons(i32, Box<LinkedList>),
    Nil,
}

impl LinkedList {
    fn new() -> LinkedList { Nil }
    fn add(self, x: i32) -> LinkedList {
        Cons(x, Box::new(self))
    }

    fn len(&self) -> i32 {
        match *self {
            Cons(_, ref tail) => 1 + tail.len(),
            Nil => 0
        }
    }

    fn stringify(&self) -> String {
        match *self {
            Cons(head, ref tail) => { format!("{} {}", head, tail.stringify()) }
            Nil => { format!("Nil") }
        }
    }
}
