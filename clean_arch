Адаптер — это то, как ваше приложение общается с внешним миром: запросы SQL, клиенты HTTP или gRPC, программы чтения и записи файлов, публикаторы сообщений Pub/Sub. Необходимо адаптировать свои внутренние структуры под ожидания внешнего API.

Порт — это вход в приложение и единственный способ, с помощью которого внешний мир может получить к нему доступ. Это может быть сервер HTTP или gRPC, команда CLI или подписчик сообщений Pub/Sub.

Логика приложения, также известная как use cases, представляет собой тонкий слой, который «склеивает» остальные слои. Если вы читаете код и не можете сказать, какую базу данных он использует или какой URL вызывает, это хороший знак. Иногда код очень короткий, и это нормально. Думайте об этом, как об оркестраторе.

Если вы также применяете DDD (глава 6 «Упрощенное DDD»), вы можете ввести уровень предметной области, который содержит только бизнес-логику.


Домен вообще ничего не знает о других слоях. Он содержит чистую бизнес-логику.

Приложение может импортировать домен, но ничего не знает о внешних слоях. Оно понятия не имеет, вызывается ли оно HTTP-запросом, обработчиком Pub/Sub или командой CLI.

Порты могут импортировать внутренние слои. Порты — это точки входа в приложение, поэтому они часто исполняют службы или команды приложения. Однако они не могут напрямую обращаться к адаптерам.

Адаптеры могут импортировать внутренние слои. Обычно они будут работать с типами, найденными в приложении и домене, например, извлекая их из базы данных.
