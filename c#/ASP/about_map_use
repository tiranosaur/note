public class Startup
    {
        public void ConfigureServices(IServiceCollection services)
        {
        }

        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseRouting();
            int x = 1;
            int y = 1;
            app.Use(async (ctx, next) =>
            {
                x++;
                y *= 2;
                next.Invoke();
            });
            
            app.UseEndpoints(endpoints =>
            {
                endpoints.MapGet("", async context => { await context.Response.WriteAsync($"Home \nx = {x} \ny = {y}"); });
                endpoints.MapGet("help", async context => { await context.Response.WriteAsync($"x = {x} \ny = {y}"); });
                endpoints.MapControllerRoute(name: "default", pattern: "{controller=Main}/{action=Index}/{id?}");
            });
            
            app.Map("/aaa", app => app.Run(async ctx => await ctx.Response.WriteAsync("Roma")));
            app.Map("/about", About);
            app.Run(async ctx => await ctx.Response.WriteAsync("404"));
        }

        void About(IApplicationBuilder app)
        {
            app.Map("/index", app => app.Run(async ctx => await ctx.Response.WriteAsync("about index2")));
            app.Map("/empty", app => app.Run(async ctx => await ctx.Response.WriteAsync("about index1")));
            app.Map("/info", app => app.Run(async ctx => await ctx.Response.WriteAsync("about info")));
            app.MapWhen(
                ctx => ctx.Request.Query.ContainsKey("id"),
                app => app.Run(async ctx => ctx.Response.WriteAsync($"id = {ctx.Request.Query["id"]}"))
            );
            app.Run(async ctx => await ctx.Response.WriteAsync("default"));
        }
    }
