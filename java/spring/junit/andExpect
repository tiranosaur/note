// specific object
    @Test
    public void index_fault() throws Exception {
        users = JsonPreparer.prepare("json/users.json", new TypeReference<>() {
        });
        when(userRepository.findAll()).thenReturn(users);
        List<User> list = new ArrayList<>(users);
        mockMvc.perform(get("/"))
                .andExpect(status().isOk())
                .andExpect(jsonPath("$", equalTo(JsonPreparer.asParsedJson(list))));
        //.andExpect(jsonPath("$").value(equalTo(JsonPreparer.asParsedJson(list))));
    }
    
    
// class type
    @Test
    public void index_fault() throws Exception {
        users = JsonPreparer.prepare("json/users.json", new TypeReference<>() {
        });
        when(userRepository.findAll()).thenReturn(users);
        List<User> list = new ArrayList<>();
        ResultActions resultActions = mockMvc.perform(get("/"))
                .andExpect(status().isOk());

        List<User> result = JsonPreparer.toObject(resultActions.andReturn().getResponse().getContentAsString(), new TypeReference<>() {
        });
        assertThat(result.get(0)).isInstanceOf(User.class);
    }
