import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

public class Main {
    public static void main(String[] args) throws InterruptedException {
        final int ids = 5;
        final CountDownLatch latch = new CountDownLatch(ids);
        for (int id = 0; id < ids; id++) {
            new Worker(id, latch).start();
        }
        latch.await();
    }
}

class Worker extends Thread implements Runnable {
    final int id;
    final CountDownLatch latch;

    public Worker(int id, CountDownLatch latch) {
        this.id = id;
        this.latch = latch;
    }

    @Override
    public void run() {
        try {
            System.out.println("Worker " + id + " started");
            TimeUnit.SECONDS.sleep(id);
            latch.countDown();
            System.out.println("Worker " + id + " finished");
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
    }
}
