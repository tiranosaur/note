var info *log.Logger = nil
var warning *log.Logger = nil
var error *log.Logger = nil

func Info() *log.Logger {
	if info == nil {
		info = log.New(os.Stdout, "INFO: ", log.Ldate|log.Ltime|log.Llongfile)
	}
	return info
}
func Warning() *log.Logger {
	if warning == nil {
		warning = log.New(os.Stdout, "WARNING: ", log.Ldate|log.Ltime|log.Llongfile)
	}
	return warning
}
func Error() *log.Logger {
	if error == nil {
		error = log.New(os.Stdout, "ERROR: ", log.Ldate|log.Ltime|log.Llongfile)
	}
	return error
}


///////// console
var (
	WarningLogger *log.Logger
	InfoLogger    *log.Logger
	ErrorLogger   *log.Logger
)

func init() {
	InfoLogger = log.New(os.Stdout, "INFO: ", log.Ldate|log.Ltime|log.Lshortfile)
	WarningLogger = log.New(os.Stdout, "WARNING: ", log.Ldate|log.Ltime|log.Lshortfile)
	ErrorLogger = log.New(os.Stdout, "ERROR: ", log.Ldate|log.Ltime|log.Lshortfile)
}


//////////// file
var (
    WarningLogger *log.Logger
    InfoLogger    *log.Logger
    ErrorLogger   *log.Logger
)

func init() {
    file, err := os.OpenFile("logs.txt", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0666)
    if err != nil {
        log.Fatal(err)
    }

    InfoLogger = log.New(file, "INFO: ", log.Ldate|log.Ltime|log.Lshortfile)
    WarningLogger = log.New(file, "WARNING: ", log.Ldate|log.Ltime|log.Lshortfile)
    ErrorLogger = log.New(file, "ERROR: ", log.Ldate|log.Ltime|log.Lshortfile)
}


