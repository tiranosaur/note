<?php

namespace app\util;

use Monolog\Logger as MonologLogger;
use Monolog\Handler\StreamHandler;

/*
    ---DEPENDENCY---
composer require monolog/monolog

    ---USING---
require_once __DIR__ . "/vendor/autoload.php";
require_once __DIR__ . "/util/logger.php";

use app\util\Logger;

Logger::getLogger()->error("erooooooooooooooooooor", [ __FILE__, __LINE__]);
*/

class Logger
{
    private static $instance = null;

    private function __construct() {
    }

    public static function getLogger(): MonologLogger {
        if (null == self::$instance) {
            self::$instance = new MonologLogger("EXAMPLE_APP_NAME");
            $stream_handler = new StreamHandler("php://stdout");
            self::$instance->pushHandler($stream_handler);
        }
        return self::$instance;
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

composer require monolog/monolog

<?php
require_once __DIR__."/vendor/autoload.php";

use Monolog\Logger;
use Monolog\Handler\StreamHandler;

$logger = new Logger("example-app");
$stream_handler = new StreamHandler("php://stdout");
$logger->pushHandler($stream_handler);

$logger->debug("This file has been executed.");
$logger->info('This is an informational message.');
$logger->error('An error occurred: ' . '$errorMessage');


/////////////////////////////////////////////////////////////////////////////////////////////////////////////
