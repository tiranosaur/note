use std::fmt::Display;

fn main() {
    let first: First<&str> = First { id: "&str" };
    first.print();

    let first = First { id: 234 };
    first.print();

    println!("\n{}", "method1");
    method("method2");
    method(345);

    println!("\n{}", "func1");
    func("func2");
    func(777);
}

fn method<T: Display>(x: T) {
    println!("{}", x)
}

fn func<T>(x: T) where T: Display {
    println!("{}", x)
}

struct First<T: Display> {
    id: T,
}

impl<T: Display> First<T> where {
    pub fn print(&self) {
        println!("{}", self.id);
    }
}
